// @ts-nocheck
import fs from "fs";
import path from "path";
import { rimraf } from "rimraf";
import { registry } from "../../registry/registry";
import { registrySchema } from "../../registry/schema";

const result = registrySchema.safeParse(registry);

if (!result.success) {
  console.error(result.error);
  process.exit(1);
}

let index = `// @ts-nocheck
// This file is autogenerated by scripts/build-docs.ts
import * as React from "react"

export const Index: Record<string, any> = {
`;

for (const item of result.data) {
  const resolveFiles = item.files.map((file) => `registry/${file}`);

  index += `
    "${item.name}": {
      name: "${item.name}",
      type: "${item.type}",
      registryDependencies: ${JSON.stringify(item.registryDependencies)},
      component: React.lazy(() => import("@/registry/${item.type}/${item.name}${
    item.type === "ui" ? `/${item.name}` : ""
  }")),
      files: [${resolveFiles.map((file) => `"${file}"`)}],
    },`;
}

index += `
}
`;

// Write style index.
rimraf.sync(path.join(process.cwd(), "./src/app/__registry__/index.tsx"));
fs.writeFileSync(
  path.join(process.cwd(), "./src/app/__registry__/index.tsx"),
  index
);
